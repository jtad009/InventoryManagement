/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventorysystem.gui;

import inventorysystem.AutoComplete;
import inventorysystem.Interface.Switchable;
import inventorysystem.data.Product;
import inventorysystem.data.SalesData;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Epic
 */
public class Sales extends javax.swing.JPanel implements Switchable {

    private DefaultTableModel model;
    private int cartItemCount = 1;
    private AutoComplete autoCompleteWidget;
    private Product product;
    private inventorysystem.Property property;
    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
        product = new Product();

        model = new DefaultTableModel();
        cartTable.setModel(model);
        model.addColumn("Id");
        model.addColumn("Item");
        model.addColumn("Quantity");
        model.addColumn("Price");
        model.addColumn("Discount");
        cartTable.getParent().addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(final ComponentEvent e) {
                if (cartTable.getPreferredSize().width < cartTable.getParent().getWidth()) {
                    cartTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                } else {
                    cartTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                }
            }
        });
        //set logged in user welcome message
        property = new inventorysystem.Property();
        lblWelcome.setText("Welcome, ".concat(property.readProperty("EMPLOYEE_NAME")));
        
        BorderPadding.addPadding(jLayeredPane2);
        BorderPadding.addPadding(jLayeredPane1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnDeleteItem = new javax.swing.JButton();
        btnSaveCart = new javax.swing.JButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        productName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Qty = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout(1, 0));

        jLayeredPane1.setBackground(new java.awt.Color(0, 0, 0));

        cartTable.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        cartTable.setPreferredSize(new java.awt.Dimension(800, 64));
        jScrollPane1.setViewportView(cartTable);

        lblWelcome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblWelcome.setText("Welcome, user");

        lblTotal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTotal.setText("Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnDeleteItem.setText("DELETE ITEM");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });
        jPanel2.add(btnDeleteItem, new java.awt.GridBagConstraints());

        btnSaveCart.setText("SAVE CART");
        btnSaveCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(btnSaveCart, gridBagConstraints);

        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        add(jLayeredPane1, java.awt.BorderLayout.CENTER);

        productName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNameKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setText("Search product name:");

        Qty.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setText("Quantity:");

        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(productName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(Qty, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnAddToCart, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(productName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
            .addComponent(Qty, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(btnAddToCart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnAddToCart)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        add(jLayeredPane2, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String item = productName.getText();
        String qty = Qty.getValue().toString();
        
        Vector rowData = new Vector();
        rowData.add(cartItemCount);
        rowData.add(getProductName(item));
        rowData.add(qty);
        rowData.add(Integer.parseInt(qty) * getProductPrice(item));
        model.addRow(rowData);
        cartItemCount++;

        lblTotal.setText("Total : "+totalCartCost());
        
        clearSearchField();
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void productNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNameKeyPressed
        // TODO add your handling code here:
        autoCompleteWidget = new AutoComplete(productName);
        autoCompleteWidget.populateFromDB(autoCompleteWidget, product.getAllProducts());
    }//GEN-LAST:event_productNameKeyPressed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        // Make sure a row has been seleted
       int row = cartTable.getSelectedRow();
      
       if(row != -1){
           model.removeRow(cartTable.getSelectedRow());
            this.cartItemCount = this.cartItemCount != 0 ? this.cartItemCount-- : 0 ;
            cartTable.updateUI();
       }else{
           JOptionPane.showMessageDialog(null, "No Row has been selected","Error Information",JOptionPane.INFORMATION_MESSAGE);
       }
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnSaveCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCartActionPerformed
        // TODO add your handling code here:
        
        //Get the data from table as a vector and save in the sales table of the database
        //GEnerte a sales ID to identify this particular cart from other cart items
        // this will help in the inventory part
//        model.get
        SalesData data;
        data = new SalesData(model.getDataVector(), property.readProperty("EMPLOYEE_ID"), null);
        
    }//GEN-LAST:event_btnSaveCartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Qty;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnSaveCart;
    private javax.swing.JTable cartTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTextField productName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnPanelSwitched(JPanel panelToSwitch) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * On cart data edited update dable model and mark total count
     */
    private void updateTableData() {
        model.addTableModelListener((TableModelEvent e) -> {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        });
    }

    private String getProductName(String infoToSplit) {
//        ..first split the info at the - sign to get name
//                parse the second part and spilt at : sign to get price
        return infoToSplit.split("-")[0];
    }

    private Double getProductPrice(String infoToSplit) {
//        ..first split the info at the - sign to get name
//                parse the second part and spilt at : sign to get price
        String price = infoToSplit.split(":")[1];
        return Double.parseDouble(price);
    }

    private double totalCartCost() {
        //sumTotal 
        double parseDouble = 0;
        for (int i = 0; i < cartTable.getRowCount(); i++) {
            parseDouble += Double.parseDouble(cartTable.getValueAt(i, 3).toString());
        }
        return parseDouble;
    }

    private void clearSearchField() {
        //clear serach field
        productName.setText("");
    }
}

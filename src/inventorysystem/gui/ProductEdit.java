/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventorysystem.gui;

import inventorysystem.Events.ProductEvent;
import inventorysystem.Events.Request;
import inventorysystem.Interface.Switchable;
import inventorysystem.Property;
import inventorysystem.data.NumberFormater;
import inventorysystem.data.Product;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Epic
 */
public class ProductEdit extends javax.swing.JPanel implements Switchable {

    /**
     * Creates new form ProductEdit
     */
    private DefaultTableModel dfm;
    private Request _requestEvent;
    public ListSelectionModel listSelectionModel;
    private Property cache;

    private int productID; // the id of the product to edit
    private Product p;

    public ProductEdit() {
        initComponents();
        cache = new Property();
    }

    public ProductEdit(Request r) {
        initComponents();
        this.fillSupplierList();
        cache = new Property();
        _requestEvent = r;

        p = new Product();
        _requestEvent.addProductListener(p);
        try {
            this.jTable1.getSelectionModel().clearSelection();
            dfm = ProductEdit.buildTableModel(p.getAllProducts());
            
            this.jTable1.setCellSelectionEnabled(true);
            this.jTable1.setModel(dfm);
            this.jTable1.setRowHeight(45);
            jTable1.getColumn("Update").setCellRenderer(new ButtonRenderer("Update"));
            jTable1.getColumn("Update").setCellEditor(new ButtonEditor(new JCheckBox()));

            jTable1.getColumn("Delete").setCellRenderer(new ButtonRenderer("Delete"));
            jTable1.getColumn("Delete").setCellEditor(new ButtonEditor(new JCheckBox()));

            // System.out.println(listSelectionModel.isSelectionEmpty());
        } catch (Exception ex) {
            Logger.getLogger(ProductEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
        cbmManufactureDate.setDateFormat(new SimpleDateFormat("yyyy.MM.dd HH:mm:ss "));
        cbmExpiryDate.setDateFormat(new SimpleDateFormat("yyyy.MM.dd HH:mm:ss"));
    }

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws Exception {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<>();
        int columnCount = metaData.getColumnCount();
        columnNames.add("Serial");
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnLabel(column));
        }
        columnNames.add("Update");
        columnNames.add("Delete");
        // data of the table
        Vector<Vector<Object>> data = new Vector<>();
        int num_records = 1;
        JButton buttons, update = null;
        while (rs.next()) {
            Vector<Object> vector = new Vector<>();
            vector.add("" + num_records);
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            buttons = new JButton("Delete");
            update = new JButton("Update");
            vector.add(update);
            vector.add(buttons);
            data.add(vector);
            num_records++;
        }

        return new DefaultTableModel(data, columnNames);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        updatePanel = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDescription = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbmSupplier = new javax.swing.JComboBox<>();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbmManufactureDate = new datechooser.beans.DateChooserCombo();
        cbmExpiryDate = new datechooser.beans.DateChooserCombo();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtBatchNo = new javax.swing.JTextField();
        txtCost = new javax.swing.JFormattedTextField();
        txtSales = new javax.swing.JFormattedTextField();
        costError = new javax.swing.JLabel();
        salesError = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jDialog1.setTitle("Product Update");
        jDialog1.setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        jDialog1.setName("updateForm"); // NOI18N
        jDialog1.setResizable(false);
        jDialog1.setType(java.awt.Window.Type.UTILITY);

        jLabel1.setText("Name:");

        jLabel2.setText("Description:");

        taDescription.setColumns(20);
        taDescription.setRows(5);
        jScrollPane2.setViewportView(taDescription);

        jLabel3.setText("Cost Price:");

        jLabel4.setText("Sale Price:");

        jLabel5.setText("Quantity:");

        jLabel6.setText("Supplier:");

        jLayeredPane2.setLayout(new java.awt.GridLayout(1, 0));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jLayeredPane2.add(btnSave);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jLayeredPane2.add(btnCancel);

        jLabel7.setText("Manufacture Date:");

        cbmManufactureDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    jLabel8.setText("Expiry Date:");

    jLabel9.setText("Batch Number:");

    txtCost.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtCostActionPerformed(evt);
        }
    });
    txtCost.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            txtCostKeyTyped(evt);
        }
    });

    txtSales.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            txtSalesKeyTyped(evt);
        }
    });

    costError.setForeground(new java.awt.Color(204, 0, 0));

    salesError.setForeground(new java.awt.Color(204, 0, 0));

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(cbmManufactureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(cbmExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(txtBatchNo))
                .addComponent(txtName)
                .addComponent(txtQuantity)
                .addComponent(jScrollPane2)
                .addComponent(cbmSupplier, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane2)
                .addComponent(txtCost)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(costError, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(salesError, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(84, 84, 84)
                            .addComponent(jLabel8)
                            .addGap(115, 115, 115)
                            .addComponent(jLabel9)))
                    .addGap(0, 109, Short.MAX_VALUE))
                .addComponent(txtSales))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(costError))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(25, 25, 25)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(salesError))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtSales, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(25, 25, 25)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(cbmSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)))
                .addComponent(jLabel8))
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbmManufactureDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbmExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 45, Short.MAX_VALUE)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(txtBatchNo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );

    jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

    javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
    jLayeredPane1.setLayout(jLayeredPane1Layout);
    jLayeredPane1Layout.setHorizontalGroup(
        jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 550, Short.MAX_VALUE)
        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)))
    );
    jLayeredPane1Layout.setVerticalGroup(
        jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 619, Short.MAX_VALUE)
        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)))
    );

    javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
    updatePanel.setLayout(updatePanelLayout);
    updatePanelLayout.setHorizontalGroup(
        updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLayeredPane1)
    );
    updatePanelLayout.setVerticalGroup(
        updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING)
    );

    javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
    jDialog1.getContentPane().setLayout(jDialog1Layout);
    jDialog1Layout.setHorizontalGroup(
        jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 400, Short.MAX_VALUE)
        .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)))
    );
    jDialog1Layout.setVerticalGroup(
        jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 300, Short.MAX_VALUE)
        .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)))
    );

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null}
        },
        new String [] {
            "Title 1", "Title 2"
        }
    ));
    jScrollPane1.setViewportView(jTable1);

    jButton1.setText("jButton1");

    jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventorysystem/gui/imgs/Refresh.png"))); // NOI18N
    jButton2.setToolTipText("refresh table");
    jButton2.setBorderPainted(false);
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jButton2)
            .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton2))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        p = new Product(productID, txtName.getText(),
                Integer.parseInt(txtQuantity.getText()),
                Float.valueOf(txtSales.getText()),
                "", taDescription.getText(),
                cbmManufactureDate.getText(),
                cbmExpiryDate.getText(),
                txtBatchNo.getText(),
                Float.valueOf(txtCost.getText()),
                ((String) cbmSupplier.getSelectedItem()),//supplier from the combo selection
                Integer.parseInt(cache.readProperty(String.valueOf(Property.constants.EMPLOYEE_ID))), //currently logged in employee in the system
                "" + Product.Constants.UPDATE
        );
        //System.out.println(p.getEventType());
        _requestEvent._fireEvents(new ProductEvent(this, p));
        //        try {
        //            // since the login class has access to the currently logged in employee
        //            if (product.addProduct()) {
        //                JOptionPane.showMessageDialog(null, "New Product saved..");
        //            }
        //        } catch (SQLException ex) {
        //            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        //        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        txtQuantity.setText("");
        txtSales.setText((""));
        taDescription.setText("");
        txtBatchNo.setText("");
        txtCost.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostActionPerformed

    private void txtCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostKeyTyped
        // TODO add your handling code here:
        NumberFormater.integerOnlyField(evt, costError);
    }//GEN-LAST:event_txtCostKeyTyped

    private void txtSalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalesKeyTyped
        // TODO add your handling code here:
        NumberFormater.integerOnlyField(evt, salesError);
    }//GEN-LAST:event_txtSalesKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            dfm = ProductEdit.buildTableModel(p.getAllProducts());
            this.jTable1.setCellSelectionEnabled(true);
            this.jTable1.setModel(dfm);
            jTable1.getColumn("Update").setCellRenderer(new ButtonRenderer("Update"));
            jTable1.getColumn("Update").setCellEditor(new ButtonEditor(new JCheckBox()));

            jTable1.getColumn("Delete").setCellRenderer(new ButtonRenderer("Delete"));
            jTable1.getColumn("Delete").setCellEditor(new ButtonEditor(new JCheckBox()));
        } catch (Exception ex) {
            Logger.getLogger(ProductEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private datechooser.beans.DateChooserCombo cbmExpiryDate;
    private datechooser.beans.DateChooserCombo cbmManufactureDate;
    private javax.swing.JComboBox<String> cbmSupplier;
    private javax.swing.JLabel costError;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel salesError;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTextField txtBatchNo;
    private javax.swing.JFormattedTextField txtCost;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JFormattedTextField txtSales;
    private javax.swing.JPanel updatePanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnPanelSwitched(JPanel panelToSwitch) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void setProductData(Product p) {
        System.out.println(p.getProductName());
        txtName.setText(p.getProductName());
        txtQuantity.setText("" + p.getProductQuantity());
        txtSales.setText("" + p.getProductPrice());
        taDescription.setText(p.getDescription());
        txtBatchNo.setText(p.getProductBatch());
        txtCost.setText("" + p.getCostPrice());
        cbmSupplier.setSelectedItem(p.getSupplierID());
        cbmExpiryDate.setText(p.getProductExpiryDate());
        cbmManufactureDate.setText(p.getProductManufactureDate());
        this.jDialog1.setTitle("Editing:  ".concat(p.getProductName().toUpperCase()));
        this.jDialog1.setSize(600, 700);
        this.jDialog1.show();
    }

    /**
     * Get a list of suppliers and fill the suppler comboList
     */
    private void fillSupplierList() {
        inventorysystem.data.Suppler s = new inventorysystem.data.Suppler();
        Vector supplierList = new Vector(); // since a DefaultComboBoxModel takes a vector for initialization
        supplierList.add(0, "Select Suppler");
        try {
            ArrayList<inventorysystem.data.Suppler> suppliers = s.getSupplier("", true);
            for (int i = 0; i < suppliers.size(); i++) {

                supplierList.add(suppliers.get(i).getSupplerBusinessName());
                cbmSupplier.setModel(new DefaultComboBoxModel<>(supplierList));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    class ButtonEditor extends DefaultCellEditor {

        protected JButton button;
        private String label;
        private boolean isPushed;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);

            button = new JButton();
            //button.setOpaque(true);
            button.addActionListener((ActionEvent e) -> {
                System.out.println( e.getSource());
                fireEditingStopped();
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
//label = ((JButton) value).getText();
                //label = button.getText();
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }
            System.out.println(value.toString());
            label = (value == null) ? "": value.toString();
            button.setText(label);
            isPushed = true;
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            if (isPushed) {
                //System.out.println(label);
                if (label.equals("Update")) {
                    int[] selectedRow = jTable1.getSelectedRows();
                    int[] selectedColumns = jTable1.getSelectedColumns();

                    for (int i = 0; i < selectedRow.length; i++) {
                        for (int j = 0; j < selectedColumns.length; j++) {
                            productID = Integer.parseInt(jTable1.getValueAt(selectedRow[i], 1).toString());
                            System.out.println(jTable1.getValueAt(selectedRow[i], 1).toString());
                            try {

                                setProductData(p.getProduct(productID));

                                ///selection.setText(emptyPanel.jt.getValueAt(selectedRow[i], 0).toString()); 
                            } catch (SQLException ex) {
                                ex.printStackTrace();
//                                Logger.getLogger(ProductEdit.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } //
                    //
                } else if (label.equals("Delete")) {
                    try {
                        if (p.removeProduct(productID)) {
                            JOptionPane.showMessageDialog(null, "Product Removed");
                        }
                        ;
                    } catch (SQLException ex) {
                        Logger.getLogger(ButtonEditor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            isPushed = false;
            return label;
        }

        @Override
        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();
        }

        @Override
        protected void fireEditingStopped() {
            super.fireEditingStopped();
        }

    }
}
